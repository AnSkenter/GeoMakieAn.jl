include:
  - 'https://raw.githubusercontent.com/JuliaGPU/gitlab-ci/master/templates/v6.yml'
  
variables:
  MODERNGL_DEBUGGING: "true"
  JULIA_DEPOT_PATH: "$CI_PROJECT_DIR/.julia/"
  CI_DEV_PKGS: "Makie#master AbstractPlotting#master GLMakie#master MakieLayout#master Proj4#master"


test:1.3:
  tags:
    - xorg
    
  extends:
    - .julia:1.3
    
  before_script:
    - apt-get -qq update
    - apt-get -qq -o=Dpkg::Use-Pty=0 -y install wget
    - >
      if [ "${CI_RUNNER_EXECUTABLE_ARCH}" == "linux/amd64" ]; then
        wget -nv -N -P downloads/ https://julialang-s3.julialang.org/bin/linux/x64/1.3/julia-1.3-latest-linux-x86_64.tar.gz
        FILENAME=julia-1.3-latest-linux-x86_64.tar.gz
      elif [ "${CI_RUNNER_EXECUTABLE_ARCH}" == "linux/arm64" ]; then
        wget -nv -N -P downloads/ https://julialang-s3.julialang.org/bin/linux/aarch64/1.3/julia-1.3-latest-linux-aarch64.tar.gz
        FILENAME=julia-1.3-latest-linux-aarch64.tar.gz
      else
        echo "Unsupported platform:" ${CI_RUNNER_EXECUTABLE_ARCH} >&2
      fi
    - tar -C /usr/local -x -z --strip-components=1 -f downloads/${FILENAME}
    - julia -e 'using InteractiveUtils; versioninfo()'
    # https://gitlab.com/gitlab-org/gitlab-runner/issues/327
    # https://gitlab.com/gitlab-org/gitlab/issues/16343
    - export JULIA_DEPOT_PATH="$CI_PROJECT_DIR/.julia"
    - apt-get -qq update
    - apt-get install -y cmake xorg-dev mesa-utils p7zip-full
    
  script:
    - julia --project -e "using Pkg; pkg\"add $CI_DEV_PKGS\""
    - julia --project -e 'using Pkg;
                      Pkg.instantiate();
                      Pkg.build();
                      Pkg.test(; coverage=true);'
  artifacts:
    when: always
    paths:
      - test/tested_different
      - test/test_recordings
      - Project.toml
      - Manifest.toml
    expire_in: 4 days                   
